(()=>{var e={56:e=>{"use strict";e.exports=JSON.parse('{"name":"dotenv","version":"16.4.7","description":"Loads environment variables from .env file","main":"lib/main.js","types":"lib/main.d.ts","exports":{".":{"types":"./lib/main.d.ts","require":"./lib/main.js","default":"./lib/main.js"},"./config":"./config.js","./config.js":"./config.js","./lib/env-options":"./lib/env-options.js","./lib/env-options.js":"./lib/env-options.js","./lib/cli-options":"./lib/cli-options.js","./lib/cli-options.js":"./lib/cli-options.js","./package.json":"./package.json"},"scripts":{"dts-check":"tsc --project tests/types/tsconfig.json","lint":"standard","pretest":"npm run lint && npm run dts-check","test":"tap run --allow-empty-coverage --disable-coverage --timeout=60000","test:coverage":"tap run --show-full-coverage --timeout=60000 --coverage-report=lcov","prerelease":"npm test","release":"standard-version"},"repository":{"type":"git","url":"git://github.com/motdotla/dotenv.git"},"funding":"https://dotenvx.com","keywords":["dotenv","env",".env","environment","variables","config","settings"],"readmeFilename":"README.md","license":"BSD-2-Clause","devDependencies":{"@types/node":"^18.11.3","decache":"^4.6.2","sinon":"^14.0.1","standard":"^17.0.0","standard-version":"^9.5.0","tap":"^19.2.0","typescript":"^4.8.4"},"engines":{"node":">=12"},"browser":{"fs":false}}')},70:function(e,t,s){"use strict";var r,n=this&&this.__createBinding||(Object.create?function(e,t,s,r){void 0===r&&(r=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,r,n)}:function(e,t,s,r){void 0===r&&(r=s),e[r]=t[s]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||(r=function(e){return r=Object.getOwnPropertyNames||function(e){var t=[];for(var s in e)Object.prototype.hasOwnProperty.call(e,s)&&(t[t.length]=s);return t},r(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var s=r(e),i=0;i<s.length;i++)"default"!==s[i]&&n(t,e,s[i]);return o(t,e),t});Object.defineProperty(t,"__esModule",{value:!0}),t.WebviewProvider=void 0;const a=i(s(398));class c{constructor(e,t,s){this._extensionUri=e,this._testGenerator=t,this._testRunner=s,this._tests=[],this._autoDetectEnabled=!1,a.window.onDidChangeActiveTextEditor((()=>{this._updateCurrentFile()}))}resolveWebviewView(e,t,s){this._view=e,e.webview.options={enableScripts:!0,localResourceRoots:[this._extensionUri]},e.webview.html=this._getHtmlForWebview(e.webview),e.webview.onDidReceiveMessage((async e=>{switch(e.type){case"generateTests":await this._generateTests();break;case"runTests":await this._runTests();break;case"acceptTest":{const t=e.testId,s=this._tests.find((e=>e.id===t));s&&(s.status="accepted",this._view?.webview.postMessage({type:"testsUpdated",tests:this._tests}));break}case"rejectTest":{const t=e.testId,s=this._tests.find((e=>e.id===t));s&&(s.status="rejected",this._view?.webview.postMessage({type:"testsUpdated",tests:this._tests}));break}case"toggleAutoDetect":this._handleAutoDetectToggle(e.enabled)}})),this._updateStatus('Welcome to Test Crafter! Enable auto-detect or click "Generate Tests" to get started.')}async _generateTests(){const e=a.window.activeTextEditor;if(e)try{this._updateStatus("Generating tests...",!0);const t=await this._testGenerator.generateTests(e.document.getText(),e.document.languageId);this._tests=t,this._view?.webview.postMessage({type:"testsUpdated",tests:t}),this._updateStatus("Tests generated successfully",!1)}catch(e){const t=e instanceof Error?e.message:"Unknown error occurred";this._updateStatus(`Error: ${t}`,!1),a.window.showErrorMessage(`Failed to generate tests: ${t}`)}else a.window.showErrorMessage("No active editor found")}async _runTests(){try{this._updateStatus("Running tests...",!0),await this._testRunner.runTests(this._tests),this._updateStatus("Tests completed",!1)}catch(e){const t=e instanceof Error?e.message:"Unknown error occurred";this._updateStatus(`Error: ${t}`,!1),a.window.showErrorMessage(`Failed to run tests: ${t}`)}}_handleAutoDetectToggle(e){this._autoDetectEnabled=e,e?(this._fileWatcher||(this._fileWatcher=a.workspace.createFileSystemWatcher("**/*"),this._fileWatcher.onDidChange((e=>{e.fsPath===this._currentFile&&(this._debounceTimer&&clearTimeout(this._debounceTimer),this._debounceTimer=setTimeout((()=>{this._generateTests()}),1e3))}))),this._currentFile&&a.window.activeTextEditor&&this._generateTests(),this._updateStatus("Auto-detect enabled. Tests will be generated automatically.")):(this._fileWatcher&&(this._fileWatcher.dispose(),this._fileWatcher=void 0),this._debounceTimer&&(clearTimeout(this._debounceTimer),this._debounceTimer=void 0),this._updateStatus("Auto-detect disabled. Click Generate Tests to manually create tests."))}_updateCurrentFile(){const e=a.window.activeTextEditor;if(!e)return this._currentFile=void 0,void this._updateStatus("No file selected");const t=e.document.uri.fsPath;this._currentFile!==t&&(this._currentFile=t,this._updateStatus(`Current file: ${t}`),this._autoDetectEnabled&&this._generateTests())}_updateStatus(e,t=!1){this._view?.webview.postMessage({type:"updateStatus",message:e,loading:t})}_getHtmlForWebview(e){const t=e.asWebviewUri(a.Uri.joinPath(this._extensionUri,"out","webview","webview.js"));return`<!DOCTYPE html>\n            <html lang="en">\n            <head>\n                <meta charset="UTF-8">\n                <meta name="viewport" content="width=device-width, initial-scale=1.0">\n                <link href="${e.asWebviewUri(a.Uri.joinPath(this._extensionUri,"out","webview","style.css"))}" rel="stylesheet">\n                <title>Test Cases</title>\n            </head>\n            <body>\n                <div id="root"></div>\n                <script src="${t}"><\/script>\n            </body>\n            </html>`}}t.WebviewProvider=c,c.viewType="testcrafter.testView"},265:function(e,t,s){"use strict";var r,n=this&&this.__createBinding||(Object.create?function(e,t,s,r){void 0===r&&(r=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,r,n)}:function(e,t,s,r){void 0===r&&(r=s),e[r]=t[s]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||(r=function(e){return r=Object.getOwnPropertyNames||function(e){var t=[];for(var s in e)Object.prototype.hasOwnProperty.call(e,s)&&(t[t.length]=s);return t},r(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var s=r(e),i=0;i<s.length;i++)"default"!==s[i]&&n(t,e,s[i]);return o(t,e),t});Object.defineProperty(t,"__esModule",{value:!0}),t.activate=function(e){const t=h.join(e.extensionPath,".env");p.config({path:t});const s=new u.TestGenerator,r=new l.TestProvider,n=new c.WebviewProvider(e.extensionUri,s,r),o=new d.ChatViewProvider(e.extensionUri,s),i=a.window.registerWebviewViewProvider("codetestai.mainView",n),g=a.window.registerWebviewViewProvider("codetestai.chatView",o),w=a.window.createStatusBarItem(a.StatusBarAlignment.Right,100);w.text="$(beaker) CodeTest AI",w.tooltip="Show CodeTest AI",w.command="codetestai.showChat",w.show();const f=a.commands.registerCommand("codetestai.generateTests",(async()=>{const e=a.window.activeTextEditor;if(e)try{const t=await s.generateTests(e.document.getText(),e.document.languageId);r.updateTests(t),a.window.showInformationMessage("Tests generated successfully")}catch(e){const t=e instanceof Error?e.message:"Unknown error occurred";a.window.showErrorMessage(`Failed to generate tests: ${t}`)}else a.window.showErrorMessage("No active editor found. Please open a file to generate tests.")})),v=a.commands.registerCommand("codetestai.runTests",(async()=>{try{await r.runTests(new a.TestRunRequest),a.window.showInformationMessage("Tests completed")}catch(e){const t=e instanceof Error?e.message:"Unknown error occurred";a.window.showErrorMessage(`Failed to run tests: ${t}`)}})),m=a.commands.registerCommand("codetestai.acceptSuggestion",(()=>{a.commands.executeCommand("workbench.action.acceptSelectedSuggestion")})),_=a.commands.registerCommand("codetestai.rejectSuggestion",(()=>{a.commands.executeCommand("workbench.action.rejectSelectedSuggestion")})),b=a.commands.registerCommand("codetestai.showChat",(()=>{a.commands.executeCommand("workbench.view.extension.codetestai-sidebar")})),y=a.commands.registerCommand("codetestai.debugTest",(async()=>{if(a.window.activeTextEditor)try{await a.debug.startDebugging(void 0,{type:"node",request:"launch",name:"Debug Test",program:"${file}",stopOnEntry:!0})}catch(e){const t=e instanceof Error?e.message:"Unknown error occurred";a.window.showErrorMessage(`Failed to start debugging: ${t}`)}else a.window.showErrorMessage("No active editor found")}));e.subscriptions.push(i,g,f,v,m,_,b,y,w,r,a.workspace.onDidChangeConfiguration((e=>{e.affectsConfiguration("codetestai")&&r.updateTests([])})))},t.deactivate=function(){};const a=i(s(398)),c=s(70),d=s(968),l=s(587),u=s(868),p=i(s(998)),h=i(s(928))},398:e=>{"use strict";e.exports=require("vscode")},587:function(e,t,s){"use strict";var r,n=this&&this.__createBinding||(Object.create?function(e,t,s,r){void 0===r&&(r=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,r,n)}:function(e,t,s,r){void 0===r&&(r=s),e[r]=t[s]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||(r=function(e){return r=Object.getOwnPropertyNames||function(e){var t=[];for(var s in e)Object.prototype.hasOwnProperty.call(e,s)&&(t[t.length]=s);return t},r(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var s=r(e),i=0;i<s.length;i++)"default"!==s[i]&&n(t,e,s[i]);return o(t,e),t});Object.defineProperty(t,"__esModule",{value:!0}),t.TestProvider=void 0;const a=i(s(398));t.TestProvider=class{constructor(){this._testItems=new Map,this._testController=a.tests.createTestController("testcrafter","Test Crafter"),this._testController.resolveHandler=this._resolveHandler.bind(this),this._testController.refreshHandler=this._refreshHandler.bind(this),this._testController.createRunProfile("Run Tests",a.TestRunProfileKind.Run,this.runTests.bind(this))}updateTests(e){this._testItems.clear(),this._testController.items.replace([]),e.forEach((e=>{const t=this._testController.createTestItem(e.id,e.title,a.Uri.file(e.id));t.description=e.category,t.canResolveChildren=!1,this._testItems.set(e.id,t),this._testController.items.add(t)}))}async _resolveHandler(){}async _refreshHandler(){}async runTests(e){const t=this._testController.createTestRun(e),s=[];for(e.include?e.include.forEach((e=>s.push(e))):this._testController.items.forEach((e=>s.push(e)));s.length>0;){const e=s.pop();t.started(e);try{t.passed(e)}catch(s){const r=s instanceof Error?s:new Error("Unknown error");t.failed(e,new a.TestMessage(r.message))}}t.end()}dispose(){this._testController.dispose()}}},857:e=>{"use strict";e.exports=require("os")},868:(e,t,s)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.TestGenerator=void 0;const r=s(913);t.TestGenerator=class{constructor(){this.categories=["Basic Test Cases","Edge Case Test Cases","Boundary Value Test Cases","Negative Test Cases","Large Input Test Cases","Special Character Test Cases","Null/Empty Input Test Cases","Duplicate Input Test Cases","Performance & Stress Test Cases","Security Test Cases","Dependency-Based Test Cases","Randomized Test Cases","Multi-Threading Test Cases","Compatibility Test Cases","UI/UX Test Cases","API Test Cases","Database Test Cases","Regression Test Cases","Integration Test Cases","Unit Test Cases","System Test Cases","End-to-End (E2E) Test Cases","Acceptance Test Cases","Localization & Internationalization Test Cases","Usability Test Cases"],this.groqService=new r.GroqService}async generateTests(e,t){try{const s=this.categories.map((async s=>{const r=this.generatePrompt(e,t,s),n=await this.groqService.generateCompletion(r);return this.parseResponse(n,s)}));return(await Promise.all(s)).flat()}catch(e){throw new Error(`Failed to generate tests: ${e.message}`)}}generatePrompt(e,t,s){return`\nGenerate test cases for the following ${t} code, focusing on ${s}:\n\n${e}\n\nPlease provide test cases in the following format:\n{\n    "title": "Brief description of the test case",\n    "input": "Test input values",\n    "expectedOutput": "Expected output or behavior",\n    "code": "Complete test code that can be executed"\n}\n\nGenerate up to 3 test cases for this category.`}parseResponse(e,t){try{return(e.match(/\{[^{}]*\}/g)||[]).map(((e,s)=>{const r=JSON.parse(e);return{id:`${t}-${s}`,title:r.title,category:t,code:r.code,input:r.input,expectedOutput:r.expectedOutput,status:"pending"}}))}catch(e){const s=e;return console.error(`Failed to parse test cases for ${t}:`,s),[]}}}},896:e=>{"use strict";e.exports=require("fs")},913:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.GroqService=void 0,t.GroqService=class{constructor(){this.baseUrl="https://api.groq.com/v1/completions";const e=process.env.GROQ_API_KEY;if(!e)throw new Error("GROQ_API_KEY environment variable is not set");this.apiKey=e}async generateCompletion(e){try{const t=await fetch(this.baseUrl,{method:"POST",headers:{Authorization:`Bearer ${this.apiKey}`,"Content-Type":"application/json"},body:JSON.stringify({model:"mixtral-8x7b-32768",messages:[{role:"system",content:"You are a test case generator assistant. Generate test cases in JSON format based on the provided code and requirements."},{role:"user",content:e}],temperature:.7,max_tokens:4e3,top_p:1,stream:!1})});if(!t.ok)throw new Error(`API request failed: ${t.statusText}`);return(await t.json()).choices[0].message.content}catch(e){throw new Error(`Failed to generate test case: ${e.message}`)}}async generateTestCases(e,t){const s=`Generate test cases for the following ${t} code:\n\n${e}`;return this.generateCompletion(s)}async getCodeSuggestions(e,t){const s=`Analyze this code and provide intelligent code suggestions at position ${t.line}:${t.character}. Consider the context and best practices.\n\nCode:\n\`\`\`\n${e}\n\`\`\``,r=await this.generateCompletion(s);try{return r.split("\n").filter((e=>e.trim())).map((e=>{const[t,...s]=e.split(" - ");return{text:t.trim(),detail:s.join(" - ").trim()}}))}catch(e){return console.error("Error parsing suggestions:",e),[]}}async getChatResponse(e){const t=e.map((e=>`${e.role}: ${e.content}`)).join("\n");return this.generateCompletion(t)}async getDebugSuggestions(e,t){const s=`Debug this code and provide suggestions for fixing the error:\n\nError:\n${t}\n\nCode:\n\`\`\`\n${e}\n\`\`\`\n\nPlease provide:\n1. Analysis of the error\n2. Potential fixes\n3. Best practices to prevent similar issues`;return this.generateCompletion(s)}}},928:e=>{"use strict";e.exports=require("path")},968:function(e,t,s){"use strict";var r,n=this&&this.__createBinding||(Object.create?function(e,t,s,r){void 0===r&&(r=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,r,n)}:function(e,t,s,r){void 0===r&&(r=s),e[r]=t[s]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||(r=function(e){return r=Object.getOwnPropertyNames||function(e){var t=[];for(var s in e)Object.prototype.hasOwnProperty.call(e,s)&&(t[t.length]=s);return t},r(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var s=r(e),i=0;i<s.length;i++)"default"!==s[i]&&n(t,e,s[i]);return o(t,e),t});Object.defineProperty(t,"__esModule",{value:!0}),t.ChatViewProvider=void 0;const a=i(s(398));class c{constructor(e,t){this._extensionUri=e,this._testGenerator=t}resolveWebviewView(e,t,s){this._view=e,e.webview.options={enableScripts:!0,localResourceRoots:[this._extensionUri]},e.webview.html=this._getHtmlForWebview(e.webview),e.webview.onDidReceiveMessage((async e=>{switch(e.type){case"sendMessage":await this._handleUserMessage(e.message);break;case"acceptCode":await this._handleAcceptCode(e.code);break;case"rejectCode":await this._handleRejectCode(e.code)}}))}async _handleUserMessage(e){try{const t=a.window.activeTextEditor,s=t?.document.getText()||"",r=t?.document.fileName||"",n=t?.document.languageId||"";this._view?.webview.postMessage({type:"setTyping",value:!0});const o=await this._generateResponse(e,s,r,n);this._view?.webview.postMessage({type:"receiveMessage",message:{type:"assistant",content:o.text,timestamp:(new Date).toLocaleTimeString(),codeBlocks:o.codeBlocks}})}catch(e){const t=e instanceof Error?e.message:"Unknown error occurred";a.window.showErrorMessage(`Failed to process message: ${t}`)}finally{this._view?.webview.postMessage({type:"setTyping",value:!1})}}async _generateResponse(e,t,s,r){if(e.toLowerCase().includes("generate test")||e.toLowerCase().includes("create test"))try{return{text:"I've generated some test cases for your code:",codeBlocks:(await this._testGenerator.generateTests(t,r)).map((e=>({code:e.code,language:r})))}}catch(e){throw new Error("Failed to generate tests: "+e)}return e.toLowerCase().includes("analyze")||e.toLowerCase().includes("review")?{text:`Here's my analysis of ${s}:\n\nThe code appears to be well-structured. Here are some suggestions:`,codeBlocks:[{code:"// Consider adding error handling\ntry {\n    // Your code\n} catch (error) {\n    // Handle error\n}",language:r}]}:{text:'I can help you with code analysis and test generation. Try asking me to "analyze this code" or "generate tests".',codeBlocks:[]}}async _handleAcceptCode(e){try{const t=a.window.activeTextEditor;t&&(await t.edit((s=>{const r=t.selection.active;s.insert(r,e)})),a.window.showInformationMessage("Code inserted successfully"))}catch(e){const t=e instanceof Error?e.message:"Unknown error occurred";a.window.showErrorMessage(`Failed to insert code: ${t}`)}}async _handleRejectCode(e){console.log("Code suggestion rejected:",e),a.window.showInformationMessage("Code suggestion rejected")}_getHtmlForWebview(e){const t=e.asWebviewUri(a.Uri.joinPath(this._extensionUri,"out","webview","webview.js"));return`<!DOCTYPE html>\n            <html lang="en">\n            <head>\n                <meta charset="UTF-8">\n                <meta name="viewport" content="width=device-width, initial-scale=1.0">\n                <link href="${e.asWebviewUri(a.Uri.joinPath(this._extensionUri,"out","webview","style.css"))}" rel="stylesheet">\n                <title>AI Chat</title>\n            </head>\n            <body>\n                <div id="root"></div>\n                <script src="${t}"><\/script>\n            </body>\n            </html>`}}t.ChatViewProvider=c,c.viewType="testcrafter.chatView"},982:e=>{"use strict";e.exports=require("crypto")},998:(e,t,s)=>{const r=s(896),n=s(928),o=s(857),i=s(982),a=s(56).version,c=/(?:^|^)\s*(?:export\s+)?([\w.-]+)(?:\s*=\s*?|:\s+?)(\s*'(?:\\'|[^'])*'|\s*"(?:\\"|[^"])*"|\s*`(?:\\`|[^`])*`|[^#\r\n]+)?\s*(?:#.*)?(?:$|$)/gm;function d(e){console.log(`[dotenv@${a}][DEBUG] ${e}`)}function l(e){return e&&e.DOTENV_KEY&&e.DOTENV_KEY.length>0?e.DOTENV_KEY:process.env.DOTENV_KEY&&process.env.DOTENV_KEY.length>0?process.env.DOTENV_KEY:""}function u(e,t){let s;try{s=new URL(t)}catch(e){if("ERR_INVALID_URL"===e.code){const e=new Error("INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenvx.com/vault/.env.vault?environment=development");throw e.code="INVALID_DOTENV_KEY",e}throw e}const r=s.password;if(!r){const e=new Error("INVALID_DOTENV_KEY: Missing key part");throw e.code="INVALID_DOTENV_KEY",e}const n=s.searchParams.get("environment");if(!n){const e=new Error("INVALID_DOTENV_KEY: Missing environment part");throw e.code="INVALID_DOTENV_KEY",e}const o=`DOTENV_VAULT_${n.toUpperCase()}`,i=e.parsed[o];if(!i){const e=new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${o} in your .env.vault file.`);throw e.code="NOT_FOUND_DOTENV_ENVIRONMENT",e}return{ciphertext:i,key:r}}function p(e){let t=null;if(e&&e.path&&e.path.length>0)if(Array.isArray(e.path))for(const s of e.path)r.existsSync(s)&&(t=s.endsWith(".vault")?s:`${s}.vault`);else t=e.path.endsWith(".vault")?e.path:`${e.path}.vault`;else t=n.resolve(process.cwd(),".env.vault");return r.existsSync(t)?t:null}function h(e){return"~"===e[0]?n.join(o.homedir(),e.slice(1)):e}const g={configDotenv:function(e){const t=n.resolve(process.cwd(),".env");let s="utf8";const o=Boolean(e&&e.debug);e&&e.encoding?s=e.encoding:o&&d("No encoding is specified. UTF-8 is used by default");let i,a=[t];if(e&&e.path)if(Array.isArray(e.path)){a=[];for(const t of e.path)a.push(h(t))}else a=[h(e.path)];const c={};for(const t of a)try{const n=g.parse(r.readFileSync(t,{encoding:s}));g.populate(c,n,e)}catch(e){o&&d(`Failed to load ${t} ${e.message}`),i=e}let l=process.env;return e&&null!=e.processEnv&&(l=e.processEnv),g.populate(l,c,e),i?{parsed:c,error:i}:{parsed:c}},_configVault:function(e){console.log(`[dotenv@${a}][INFO] Loading env from encrypted .env.vault`);const t=g._parseVault(e);let s=process.env;return e&&null!=e.processEnv&&(s=e.processEnv),g.populate(s,t,e),{parsed:t}},_parseVault:function(e){const t=p(e),s=g.configDotenv({path:t});if(!s.parsed){const e=new Error(`MISSING_DATA: Cannot parse ${t} for an unknown reason`);throw e.code="MISSING_DATA",e}const r=l(e).split(","),n=r.length;let o;for(let e=0;e<n;e++)try{const t=u(s,r[e].trim());o=g.decrypt(t.ciphertext,t.key);break}catch(t){if(e+1>=n)throw t}return g.parse(o)},config:function(e){if(0===l(e).length)return g.configDotenv(e);const t=p(e);return t?g._configVault(e):(s=`You set DOTENV_KEY but you are missing a .env.vault file at ${t}. Did you forget to build it?`,console.log(`[dotenv@${a}][WARN] ${s}`),g.configDotenv(e));var s},decrypt:function(e,t){const s=Buffer.from(t.slice(-64),"hex");let r=Buffer.from(e,"base64");const n=r.subarray(0,12),o=r.subarray(-16);r=r.subarray(12,-16);try{const e=i.createDecipheriv("aes-256-gcm",s,n);return e.setAuthTag(o),`${e.update(r)}${e.final()}`}catch(e){const t=e instanceof RangeError,s="Invalid key length"===e.message,r="Unsupported state or unable to authenticate data"===e.message;if(t||s){const e=new Error("INVALID_DOTENV_KEY: It must be 64 characters long (or more)");throw e.code="INVALID_DOTENV_KEY",e}if(r){const e=new Error("DECRYPTION_FAILED: Please check your DOTENV_KEY");throw e.code="DECRYPTION_FAILED",e}throw e}},parse:function(e){const t={};let s,r=e.toString();for(r=r.replace(/\r\n?/gm,"\n");null!=(s=c.exec(r));){const e=s[1];let r=s[2]||"";r=r.trim();const n=r[0];r=r.replace(/^(['"`])([\s\S]*)\1$/gm,"$2"),'"'===n&&(r=r.replace(/\\n/g,"\n"),r=r.replace(/\\r/g,"\r")),t[e]=r}return t},populate:function(e,t,s={}){const r=Boolean(s&&s.debug),n=Boolean(s&&s.override);if("object"!=typeof t){const e=new Error("OBJECT_REQUIRED: Please check the processEnv argument being passed to populate");throw e.code="OBJECT_REQUIRED",e}for(const s of Object.keys(t))Object.prototype.hasOwnProperty.call(e,s)?(!0===n&&(e[s]=t[s]),r&&d(!0===n?`"${s}" is already defined and WAS overwritten`:`"${s}" is already defined and was NOT overwritten`)):e[s]=t[s]}};e.exports.configDotenv=g.configDotenv,e.exports._configVault=g._configVault,e.exports._parseVault=g._parseVault,e.exports.config=g.config,e.exports.decrypt=g.decrypt,e.exports.parse=g.parse,e.exports.populate=g.populate,e.exports=g}},t={},s=function s(r){var n=t[r];if(void 0!==n)return n.exports;var o=t[r]={exports:{}};return e[r].call(o.exports,o,o.exports,s),o.exports}(265);module.exports=s})();
//# sourceMappingURL=extension.js.map